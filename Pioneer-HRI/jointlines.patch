Index: bin/skeleton_markers.py
===================================================================
--- bin/skeleton_markers.py	(revision 786)
+++ bin/skeleton_markers.py	(working copy)
@@ -34,7 +34,7 @@
         rospy.loginfo("Initializing Skeleton Markers Node...")
         
         self.rate = rospy.get_param('~rate', 20)
-        self.scale = rospy.get_param('~scale', 0.07)
+        self.scale = rospy.get_param('~scale', 0.05)
         self.lifetime = rospy.get_param('~lifetime', 0) # 0 is forever
         self.ns = rospy.get_param('~ns', 'skeleton_markers')
         self.id = rospy.get_param('~id', 0)
@@ -47,6 +47,7 @@
         
         # Define a marker publisher.
         self.marker_pub = rospy.Publisher('skeleton_markers', Marker)
+        self.markerLine_pub = rospy.Publisher('skeleton_marker_Lines', Marker)
         
         # Initialize the marker points list.
         self.markers = Marker()
@@ -61,20 +62,90 @@
         self.markers.color.g = self.color['g']
         self.markers.color.b = self.color['b']
         self.markers.color.a = self.color['a']
+
+        # Initialize the marker Lines list.
+        self.markersLine = Marker()
+        self.markersLine.ns = self.ns
+        self.markersLine.id = self.id
+        self.markersLine.type = Marker.LINE_LIST
+        self.markersLine.action = Marker.ADD
+        self.markersLine.lifetime = rospy.Duration(self.lifetime)
+        self.markersLine.scale.x = self.scale/2
+        #self.markersLine.scale.y = self.scale
+        self.markersLine.color.r = self.color['r']
+        self.markersLine.color.g = self.color['g']
+        self.markersLine.color.b = self.color['b']
+        self.markersLine.color.a = self.color['a']
                 
         while not rospy.is_shutdown():
-            self.marker_pub.publish(self.markers)                        
+            self.marker_pub.publish(self.markers)  
+            self.markerLine_pub.publish(self.markersLine)                                              
             rate.sleep()
         
     def skeleton_handler(self, msg):
         self.markers.header.frame_id = msg.header.frame_id
         self.markers.header.stamp = rospy.Time.now()
         self.markers.points = list()
+        self.markersLine.header.frame_id = msg.header.frame_id
+        self.markersLine.header.stamp = rospy.Time.now()
+        self.markersLine.points = list()
         for joint in msg.name:           
             p = Point()
             p = msg.position[msg.name.index(joint)]
             self.markers.points.append(p)
 
+      #Joint data:  [1:'head', 2:'neck', 3:'torso', 4:'left_shoulder', 5:'left_elbow',
+       #             6:'left_hand', 7:'right_shoulder', 8:'right_elbow', 9:'right_hand', 10:'left_hip',
+        #            11:'left_knee', 12:'left_foot', 13:'right_hip', 14:'right_knee', 15:'right_foot']
+
+        self.markersLine.points.append(msg.position[0]) #head
+        self.markersLine.points.append(msg.position[1]) #neck
+
+        self.markersLine.points.append(msg.position[1]) #neck
+        self.markersLine.points.append(msg.position[3]) #left_shoulder
+
+        self.markersLine.points.append(msg.position[1]) #neck
+        self.markersLine.points.append(msg.position[6]) #right_shoulder
+
+        self.markersLine.points.append(msg.position[2]) #torso
+        self.markersLine.points.append(msg.position[3]) #left_shoulder
+
+        self.markersLine.points.append(msg.position[2]) #torso
+        self.markersLine.points.append(msg.position[6]) #right_shoulder
+
+        self.markersLine.points.append(msg.position[2]) #torso
+        self.markersLine.points.append(msg.position[9]) #left_hip
+
+        self.markersLine.points.append(msg.position[2]) #torso
+        self.markersLine.points.append(msg.position[12]) #right_hip
+
+        self.markersLine.points.append(msg.position[9]) #left_hip
+        self.markersLine.points.append(msg.position[12]) #right_hip
+
+        self.markersLine.points.append(msg.position[3]) #left_shoulder
+        self.markersLine.points.append(msg.position[4]) #left_elbow
+
+        self.markersLine.points.append(msg.position[4]) #left_elbow
+        self.markersLine.points.append(msg.position[5]) #left_hand
+
+        self.markersLine.points.append(msg.position[6]) #right_shoulder
+        self.markersLine.points.append(msg.position[7]) #right_elbow
+
+        self.markersLine.points.append(msg.position[7]) #right_elbow
+        self.markersLine.points.append(msg.position[8]) #right_hand
+
+        self.markersLine.points.append(msg.position[9]) #left_hip
+        self.markersLine.points.append(msg.position[10]) #left_knee
+
+        self.markersLine.points.append(msg.position[10]) #left_knee
+        self.markersLine.points.append(msg.position[11]) #left_foot
+
+        self.markersLine.points.append(msg.position[12]) #right_hip
+        self.markersLine.points.append(msg.position[13]) #right_knee
+
+        self.markersLine.points.append(msg.position[13]) #right_knee
+        self.markersLine.points.append(msg.position[14]) #right_foot
+
     def shutdown(self):
         rospy.loginfo('Shutting down Skeleton Marker Node.')
         
@@ -82,4 +153,4 @@
     try:
         SkeletonMarkers()
     except rospy.ROSInterruptException:
-        pass
\ No newline at end of file
+        pass
Index: launch/markers.launch
===================================================================
--- launch/markers.launch	(revision 786)
+++ launch/markers.launch	(working copy)
@@ -1,10 +1,6 @@
 <launch>
   <arg name="fixed_frame" value="openni_depth_frame" />
   
-  <include file="$(find skeleton_markers)/launch/skeleton.launch">
-     <param name="fixed_frame" value="$(arg fixed_frame)" />
-  </include>
-
   <node pkg="skeleton_markers" name="skeleton_markers" type="skeleton_markers.py" output="screen">
     <rosparam file="$(find skeleton_markers)/params/marker_params.yaml" command="load" />
     <param name="fixed_frame" value="$(arg fixed_frame)" />
